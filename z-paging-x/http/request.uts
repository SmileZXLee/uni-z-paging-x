const loadingTime = 500;
const showLog = false;

export type ListItem = {
    title : string,
	detail: string
};

// type Request = {
// 	queryList: (data: UTSJSONObject) => Promise<UTSJSONObject>
// }

export function requestList(data: UTSJSONObject): Promise<UTSJSONObject> {
	const listCount = 24;
	return _queryList(data, listCount);
}

// export default {
// 	queryList 
// } as Request

function _queryList(data: UTSJSONObject, listCount: number): Promise<UTSJSONObject> {
	let pageNo = data['pageNo'] as number;
	let pageSize = data['pageSize'] as number;
	let type = data['type'] as number;
	if (pageNo < 0 || pageSize <= 0) {
		return _callQueryResult([] as ListItem[]);
	}
	if (showLog) {
		console.log('%c\n----------请求开始--------', 'color:green;');
		console.info(`请求参数：【pageNo:${pageNo},pageSize:${pageSize}】`)
		console.log('%c----------请求结束--------\n', 'color:green;');
	}
	uni.showLoading({
		title: '加载中...'
	})
	if (pageNo == 0) {
		pageNo = 1;
	}
	var totalPagingList: ListItem[] = [];
	for (let i = 0; i < listCount; i++) {
		const item = {
			'title': `标题${i + 1}`,
			'detail': '测试信息' + type
		} as ListItem;
		totalPagingList.push(item);
	}
	let pageNoIndex = (pageNo - 1) * pageSize;
	if (pageNoIndex + pageSize <= totalPagingList.length) {
		return _callQueryResult(totalPagingList.splice(pageNoIndex, pageSize));
	} else if (pageNoIndex < totalPagingList.length) {
		return _callQueryResult(totalPagingList.splice(pageNoIndex, totalPagingList.length - pageNoIndex));
	} else {
		return _callQueryResult([] as ListItem[]);
	}
}

function _callQueryResult(arg: ListItem[]): Promise<UTSJSONObject> {
	return new Promise((resolve, _) => {
		setTimeout(() => {
			uni.hideLoading();
			resolve({
				data: arg
			});
		}, loadingTime)
	})

}




